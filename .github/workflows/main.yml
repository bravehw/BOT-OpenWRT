name: Openwrt Build Bot
on:
  #push:
  #  branches: main
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  buildimg:
    name: Build Openwrt Image
    #runs-on: ubuntu-20.04
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - PROFILE_VERSION: openwrt-19.07
          #CONFIG_BUILDINFO: https://downloads.openwrt.org/releases/19.07.7/targets/ipq806x/generic/config.buildinfo
          #FEEDS_BUILDINFO: https://downloads.openwrt.org/releases/19.07.7/targets/ipq806x/generic/feeds.buildinfo
          DEFINE_STR: CONFIG_TARGET_ipq806x=y,CONFIG_TARGET_ipq806x_generic=y,CONFIG_TARGET_MULTI_PROFILE=y,CONFIG_TARGET_DEVICE_ipq806x_generic_DEVICE_netgear_r7800=y
    steps:
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          #sudo -E apt install -y libev-dev libc-ares-dev libudns-dev libncurses-dev build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev python2 python3 unzip wget python3-distutils python3-setuptools rsync subversion swig time xsltproc zlib1g-dev
          sudo -E apt install -y ccache gawk git libev-dev libc-ares-dev libudns-dev libncurses-dev
          sudo -E apt-get -y dist-upgrade
          sudo -E apt-get clean
          
      - name: Rclone Install & Config
        run: |
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone/
          cat >  ~/.config/rclone/rclone.conf  << EOF
          ${{ secrets.RCLONE_CONF }}
          EOF
          
      - name: Sync OpenWRT git source
        env:
          PROFILE_VERSION: ${{ matrix.PROFILE_VERSION }}
        run: |
          git clone -b $PROFILE_VERSION https://git.openwrt.org/openwrt/openwrt.git
          
      - name: Sync addon package
        run: |
          pwd
          # Vlmcsd
          git clone -b master https://github.com/mchome/openwrt-vlmcsd openwrt/package/vlmcsd
          git clone -b master https://github.com/mchome/luci-app-vlmcsd openwrt/package/luci-app-vlmcsd
          
      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Initiate configuration file
        env:
          DEFINE_STR: ${{ matrix.DEFINE_STR }}
        run: |
          cd openwrt
          rm -f ./.config*
          define_arry=(${DEFINE_STR//,/ })
          for var in ${define_arry[@]}
          do
            echo $var >> ./.config
          done
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          
      - name: Add additional package to configuration file
        run: |
          cd openwrt
          cat >> ./.config <<EOF
          CONFIG_PACKAGE_vlmcsd=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-ssl=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          
      - name: Complie firmware
        run: |
          cd openwrt
          make download -j8
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
          
      - name: Collect firmware
        run: |
          mkdir ~/artifact
          find ./openwrt/bin/targets/ -name "*factory*" | xargs -i mv -f {} ~/artifact/
          find ./openwrt/bin/targets/ -name "*sysupgrade*" | xargs -i mv -f {} ~/artifact/
          cp ./openwrt/.config ~/artifact/

      - name: Rclone Sync
        run: |
          export CDATE=`date '+%Y%m%d%H%M%S'`
          rclone mkdir TeraCLOUD:/OpenWRT/${CDATE}
          rclone copy ~/artifact TeraCLOUD:/OpenWRT/${CDATE}
